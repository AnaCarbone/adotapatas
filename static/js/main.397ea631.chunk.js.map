{"version":3,"sources":["assets/img/home-page.png","assets/img/dog-woody.JPG","assets/img/dog-meg.jpg","assets/img/cat-miguel.jpg","components/ButtonAppBar.js","components/FilterBar.js","view/PetsPage.js","view/PortalPetPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","title","header","backgroundColor","blue","button","color","grey","textDecoration","ButtonAppBar","classes","className","AppBar","position","Toolbar","Typography","variant","to","Button","edge","marginLeft","spacing","unit","marginRight","marginTop","space","yellow","toolbar","FilterBar","PetsPage","props","state","amountAnimals","isFemale","page","rowsPerPage","pets","name","image","imageWoody","description","gender","type","imageMeg","imageMiguel","alert","this","Paper","square","main","src","imageMain","height","spaceMain","titleMain","grid","GridList","cellHeight","cols","slice","map","pet","whichGender","GridListTile","Card","card","onClick","popUp","CardHeader","avatar","Avatar","aria-label","female","male","CardActionArea","CardMedia","media","CardContent","gutterBottom","component","Component","withStyles","width","marginBottom","maxWidth","purple","green","display","flexWrap","justifyContent","overflow","palette","background","paper","PortalPetPage","alt","App","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.397ea631.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home-page.d91af8a3.png\";","module.exports = __webpack_public_path__ + \"static/media/dog-woody.e91e5196.JPG\";","module.exports = __webpack_public_path__ + \"static/media/dog-meg.ce017cce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cat-miguel.359a6529.jpg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { blue, grey } from '@material-ui/core/colors';\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title :{\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    backgroundColor: blue[400],\r\n  },\r\n  button: {\r\n    color: grey[50],\r\n    textDecoration: 'none'\r\n  }\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"fixed\" className={classes.header}>\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" >\r\n            AdotaPatas\r\n          </Typography>\r\n          <Typography className={classes.title}></Typography>\r\n          <Link to=\"/pets\" className={classes.button}>\r\n            <Button color=\"inherit\">Pets</Button>\r\n          </Link>\r\n          <Button color=\"inherit\" edge=\"end\">Produtos</Button>\r\n          <Link to=\"/portal\" className={classes.button}>\r\n            <Button color=\"inherit\">√Årea Pets</Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { yellow, grey } from '@material-ui/core/colors';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginLeft: theme.spacing.unit * 15,\r\n    marginRight: theme.spacing.unit * 15,\r\n    marginTop: theme.spacing.unit * 2,\r\n  },\r\n  space :{\r\n    flexGrow: 1,\r\n  },\r\n  header: {\r\n    backgroundColor: yellow[600],\r\n  },\r\n  title: {\r\n    color: grey[900],\r\n  },\r\n  toolbar: {\r\n    marginLeft: theme.spacing.unit * 5,\r\n    marginRight: theme.spacing.unit * 5,\r\n  }\r\n}));\r\n\r\nexport default function FilterBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" className={classes.header}>\r\n        <Toolbar className={classes.toolbar}>\r\n            <Typography variant=\"h7\" className={classes.title} >\r\n            Encontre seu Melhor Amigo\r\n            </Typography>\r\n            <Typography className={classes.space}></Typography>\r\n            <Button>                           \r\n                <FilterList/>\r\n            </Button>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Typography, Paper, GridListTile } from '@material-ui/core';\r\nimport ButtonAppBar from \"../components/ButtonAppBar\";\r\nimport FilterBar from \"../components/FilterBar\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport imageWoody from '../assets/img/dog-woody.JPG';\r\nimport imageMeg from '../assets/img/dog-meg.jpg';\r\nimport imageMain from '../assets/img/home-page.png';\r\nimport imageMiguel from '../assets/img/cat-miguel.jpg';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport { green, purple, grey, yellow } from '@material-ui/core/colors';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\n\r\nclass PetsPage extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            amountAnimals: \"10 mil\",\r\n            isFemale: true,\r\n            page: 0,\r\n            rowsPerPage: 10,\r\n            pets:[\r\n                {\r\n                    name: \"Woody\",\r\n                    image: imageWoody,\r\n                    description:  \"Labrador branco muito brincalh√£o de 4 meses. S√£o Paulo - SP.\",\r\n                    gender: \"M\",\r\n                    type:  \"Cachorro de Grande Porte\",\r\n\r\n                },\r\n                {\r\n                    name: \"Meggy\",\r\n                    image: imageMeg,\r\n                    description:  \"Muito tranquila e carinhosa de 1 ano. Rio de Janeiro - RJ.\",\r\n                    gender: \"F\",\r\n                    type:  \"Cachorra de Pequeno Porte\",\r\n                },\r\n                {\r\n                    name: \"Miguel\",\r\n                    image: imageMiguel,\r\n                    description:  \"Muito brincalh√£o de 2 ano. Rio de Janeiro - RJ.\",\r\n                    gender: \"M\",\r\n                    type:  \"Gato de Pequeno Porte\",\r\n                }\r\n            ]\r\n            \r\n        };\r\n    }\r\n\r\n    popUp() {\r\n        alert(\"ADOTAR\");\r\n    } \r\n\r\n    whichGender(gender) {\r\n        if(gender=='M') {\r\n            this.state.isFemale = false;\r\n        } else {\r\n            this.state.isFemale = true;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const { pets, rowsPerPage, page } = this.state;\r\n        return(\r\n            <div>\r\n                <ButtonAppBar></ButtonAppBar>\r\n                <div className={classes.root}>  \r\n                    <Paper  square={true} className={classes.main}>\r\n                        <Toolbar>\r\n                            <img src={imageMain} height=\"300\"/>\r\n                            <Typography className={classes.spaceMain}></Typography>\r\n                            <Typography variant=\"h4\" className={classes.titleMain}>\r\n                               <b> {this.state.amountAnimals}</b><br/>  pets buscando um lar\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </Paper>\r\n                    <FilterBar></FilterBar>\r\n                </div>\r\n                <div className={classes.grid}>\r\n                    <GridList cellHeight={360}  cols=\"3\">\r\n                    {pets.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(pet => {\r\n                            this.whichGender(pet.gender);\r\n                            return (\r\n                                <GridListTile>\r\n                                    <Card className={classes.card} onClick={this.popUp}>\r\n                                        <CardHeader\r\n                                            avatar={\r\n                                            <Avatar aria-label=\"recipe\" className={this.state.isFemale ? classes.female : classes.male}>\r\n                                                {pet.gender}\r\n                                            </Avatar>\r\n                                            }\r\n                                            title={pet.type}\r\n                                        />\r\n                                        <CardActionArea>\r\n                                            <CardMedia\r\n                                            className={classes.media}\r\n                                            image={pet.image}\r\n                                            title={pet.name}\r\n                                            />\r\n                                            <CardContent>\r\n                                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                                                {pet.name}\r\n                                            </Typography>\r\n                                            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                                {pet.description}\r\n                                            </Typography>\r\n                                            </CardContent>\r\n                                        </CardActionArea>\r\n                                    </Card>\r\n                                </GridListTile>\r\n                            );\r\n                    })};\r\n                    </GridList>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit * 10,\r\n      marginBottom: theme.spacing.unit * 3,\r\n      flexGrow: 1,\r\n    },\r\n    card: {\r\n        marginTop: theme.spacing.unit * 2,\r\n        marginLeft: theme.spacing.unit * 2,\r\n        maxWidth: 345,\r\n      },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    female: {\r\n        backgroundColor: purple[400],\r\n    },\r\n    male: {\r\n        backgroundColor: green[400],\r\n    },\r\n    grid: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-around',\r\n        overflow: 'hidden',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    main: {\r\n        flexGrow: 1,\r\n    },\r\n    spaceMain: {\r\n        flexGrow: 1,\r\n    },\r\n    titleMain: {\r\n        color: grey[600],\r\n    },\r\n})\r\n\r\nexport default withStyles(styles)(PetsPage);","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Typography, Paper } from '@material-ui/core';\r\nimport ButtonAppBar from \"../components/ButtonAppBar\";\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport imageMain from '../assets/img/home-page.png';\r\nimport FilterBar from \"../components/FilterBar\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { grey } from '@material-ui/core/colors';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n      marginTop: theme.spacing.unit * 10,\r\n      marginBottom: theme.spacing.unit * 3,\r\n      flexGrow: 1,\r\n    },\r\n    main: {\r\n        flexGrow: 1,\r\n    },\r\n    spaceMain: {\r\n        flexGrow: 1,\r\n    },\r\n    titleMain: {\r\n        color: grey[600],\r\n    },\r\n})\r\n\r\nclass PortalPetPage extends Component {\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        return(\r\n            <div>\r\n                <ButtonAppBar></ButtonAppBar>\r\n                <div className={classes.root}>  \r\n                    <Paper square={true} className={classes.main}>\r\n                        <Toolbar>\r\n                            <img src={imageMain} height=\"300\" alt=\"AdotaPatas\"/>\r\n                            <Typography className={classes.spaceMain}></Typography>\r\n                            <Typography variant=\"h4\" className={classes.titleMain}>\r\n                            <b> Compartilhe com a gente</b><br/> eventos, not√≠cias e dicas!\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(PortalPetPage);","import React from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport PetsPage from './view/PetsPage';\r\nimport PortalPetPage from './view/PortalPetPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='container-fluid'>\r\n        <div className='row'> \r\n          <div className='col'>\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route path='/' exact component={PetsPage} />\r\n                <Route path='/pets' exact component={PetsPage} />\r\n                <Route path='/portal' exact component={PortalPetPage} />\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}